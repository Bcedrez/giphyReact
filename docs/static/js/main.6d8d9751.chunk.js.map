{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCatergory","setCategorias","useState","valorInput","SetValorInput","onSubmit","e","preventDefault","trim","length","categorias","placeholder","type","value","onChange","target","getGift","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","titulo","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","imagen","GifExpertApp","i","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAG1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAGI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAU,OAAIP,GAAJ,mBAAkBO,QAS9C,SACI,uBACAC,YAAY,aACZC,KAAK,OACLC,MAAOV,EACPW,SArBiB,SAACR,GACtBF,EAAcE,EAAES,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAIbC,EAJa,iDAImCC,UAAUH,GAJ7C,+DAKAI,MAAMF,GALN,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAO,CACHC,GAAKD,EAAIC,GACTC,OAAQF,EAAIG,MACZX,IAAKQ,EAAII,OAAOC,iBAAiBb,QAbtB,kBAkBZM,GAlBY,4CAAH,sDCCPQ,EAAc,SAAC,GAAkB,EAAjBL,GAAkB,IAAfC,EAAc,EAAdA,OAAOV,EAAO,EAAPA,IAEnC,OACI,sBAAKe,UAAU,2CAAf,UACG,qBAAKC,IAAKhB,EAAKiB,IAAKP,IACpB,4BAAIA,QCFFQ,EAAU,SAAC,GAAe,IAAdpB,EAAa,EAAbA,UAErB,ECLwB,SAACA,GAEzB,MAAyBf,mBAAS,CAC9BsB,KAAK,GACLc,SAAQ,IAFZ,mBAAOC,EAAP,KAAaC,EAAb,KA2BA,OAtBAC,qBAAU,WAENzB,EAAQC,GACHyB,MAAK,SAAAC,GAGFC,YAAW,WACPJ,EAAS,CACLhB,KAAKmB,EACLL,SAAQ,MAGd,UAOZ,CAACrB,IAGIsB,EDxBgBM,CAAa5B,GAA7BO,EAAP,EAAOA,KAAKc,EAAZ,EAAYA,QAEZ,OACI,qCACA,6BAAKrB,IAEJqB,GAAW,2CAEZ,qBAAKJ,UAAU,YAAf,SAGYV,EAAKE,KAAI,SAAAoB,GACL,OAAO,cAAC,EAAD,eAESA,GADCA,EAAOlB,aEejCmB,EA5BM,WAEjB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,uBAEA,cAAC,EAAD,CAAcA,cAAeA,IAE7B,6BAEQS,EAAWgB,KAAI,SAACT,EAAU+B,GACtB,OAAO,cAAC,EAAD,CAES/B,UAAWA,GADNA,Y,MCb7CgC,IAASC,OAEL,cAAC,EAAD,IAGFC,SAASC,eAAe,W","file":"static/js/main.6d8d9751.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCatergory = ({setCategorias}) => {\r\n\r\n\r\n    const [valorInput, SetValorInput] = useState('')\r\n\r\n    const handleValorInput = (e) => {\r\n        SetValorInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(valorInput.trim().length > 1){\r\n            setCategorias(categorias =>[valorInput,...categorias])\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n\r\n      \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n            placeholder=\"Buscar Gif\"\r\n            type=\"text\"\r\n            value={valorInput}\r\n            onChange={handleValorInput}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCatergory.propTypes = {\r\n    setCategorias : PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGift = async (categoria)=>{\r\n\r\n        \r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=LXzpoEuFM4tTEgmSa1xpRqxNbI4XTFQ6`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n\r\n        return {\r\n            id : img.id,\r\n            titulo: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n        \r\n    })\r\n\r\n    return gifs;\r\n}","import React from \"react\";\r\n\r\n\r\nexport const GifGridItem = ({id,titulo,url})=>{\r\n    // console.log({id,titulo,url})\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n           <img src={url} alt={titulo} />\r\n           <p>{titulo}</p>\r\n        </div>\r\n    );\r\n}","import React  from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFechGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\n\r\nexport const GifGrid = ({categoria})=>{\r\n    \r\n    const {data,loading} = useFetchGifs(categoria);   \r\n\r\n    return (\r\n        <>\r\n        <h3>{categoria}</h3>\r\n\r\n        {loading && <p>loading...</p>}\r\n        \r\n        <div className=\"card-grid\">  \r\n            \r\n                {\r\n                    data.map(imagen =>{\r\n                        return <GifGridItem \r\n                                    key={imagen.id} \r\n                                    {...imagen}\r\n                                   \r\n                                     />\r\n                    })\r\n                }     \r\n            \r\n        </div>\r\n       </> \r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGift } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (categoria)=>{\r\n\r\n    const [state,setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n        getGift(categoria)\r\n            .then(imgs => {\r\n\r\n\r\n                setTimeout(()=>{\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n                    \r\n                },3000)\r\n                // setState({\r\n                //     data:imgs,\r\n                //     loading:false\r\n                // })\r\n            })\r\n        \r\n    },[categoria]);\r\n\r\n   \r\n    return state\r\n}","import React, { useState } from \"react\";\r\nimport { AddCatergory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n// const categorias = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n    const [categorias, setCategorias] = useState(['Samurai X'])\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n\r\n            <AddCatergory setCategorias={setCategorias}/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map((categoria,i) =>{\r\n                        return <GifGrid\r\n                                        key={categoria}                                      \r\n                                        categoria={categoria} />\r\n                    })\r\n                }\r\n            </ol>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport GifExpertApp from './GifExpertApp';\n\n\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n    \n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}